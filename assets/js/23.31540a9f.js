(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{378:function(v,t,_){"use strict";_.r(t);var i=_(44),e=Object(i.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"type"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[v._v("#")]),v._v(" type")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("类型：string")])]),v._v(" "),_("li",[_("p",[v._v("默认值：无")])]),v._v(" "),_("li",[_("p",[v._v("可选值：script")])]),v._v(" "),_("li",[_("p",[v._v("必传：使用 script 标签引入方式必传，使用 NPM 包引入方式非必传")])])]),v._v(" "),_("p",[v._v("SDK 加载过程中会尝试获取该参数用来判断 SDK 是否是通过 Script 标签引入的。如果该参数的值为 script 则表示 SDK 是通过 Script 标签引入，SDK 将会按照在浏览器中通过 Script 标签引入 SDK 的方式来安装采集器、采集数据和上报数据。如果该参数的值未设置或者为其他值，则 SDK 会按照 NPM 包引入的方式安装采集器、采集数据、上报数据。")]),v._v(" "),_("h2",{attrs:{id:"variable"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#variable"}},[v._v("#")]),v._v(" variable")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("类型：string")])]),v._v(" "),_("li",[_("p",[v._v("默认值：无")])]),v._v(" "),_("li",[_("p",[v._v("可选值：jw_collector")])]),v._v(" "),_("li",[_("p",[v._v("必传：是")])])]),v._v(" "),_("p",[v._v("该字段用来向 SDK 表明 SDK 安装完成后需要将 SDK 全局对象挂载到 window 下的某个变量。例如：variable=jw_collector 在 SDK 安装完成后将能从 window.jw_collector 中获取到 SDK 暴露出来的自定义采集方法 record()。")]),v._v(" "),_("h2",{attrs:{id:"enviroment"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#enviroment"}},[v._v("#")]),v._v(" enviroment")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("类型：枚举类型")])]),v._v(" "),_("li",[_("p",[v._v("默认值：无")])]),v._v(" "),_("li",[_("p",[v._v("可选值：DEV、TEST、UAT、PROD")])]),v._v(" "),_("li",[_("p",[v._v("必传：enviroment 和 api 至少传一个")])])]),v._v(" "),_("p",[v._v("该字段用来设置引入 SDK 的业务环境，DEV、TEST、UAT、PROD 分别表示开发环境、测试环境、UAT 环境、正式环境，设置该值后 SDK 将向对应环境的数据提交接口提交采集数据。enviroment 字段非必传，如果没有传值则将试图获取 api 参数值。enviroment 参数与 api 参数至少需要传一个，否则将会抛出异常。")]),v._v(" "),_("h2",{attrs:{id:"api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[v._v("#")]),v._v(" api")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("类型：string")])]),v._v(" "),_("li",[_("p",[v._v("默认值：无")])]),v._v(" "),_("li",[_("p",[v._v("可选值：无")])]),v._v(" "),_("li",[_("p",[v._v("必传：enviroment 和 api 至少传一个")])])]),v._v(" "),_("p",[v._v("当 enviroment 字段没有传值时 SDK 将从该字段获取 SDK 采集数据的上传地址。")]),v._v(" "),_("h2",{attrs:{id:"loglevel"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#loglevel"}},[v._v("#")]),v._v(" logLevel")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("类型：枚举类型")])]),v._v(" "),_("li",[_("p",[v._v("默认值：ERROR")])]),v._v(" "),_("li",[_("p",[v._v("可选值：ERROR、WARN、INFO、DEBUG")])]),v._v(" "),_("li",[_("p",[v._v("必传：否")])])]),v._v(" "),_("p",[v._v("该字段用于设置 SDK 内部的日志等级、当 SDK 输出的日志等级大于或等于该等级时将被输出，否则将不会输出。SDK 日志等级包括 ERROR、WARN、INFO、DEBUG 四个等级，其等级 ERROR > WARN > INFO > DEBUG ,所以设置日志等级为 INFO 级时 ERROR、WARN、INFO 级别的日志将会输出，DEBUG 级别的日志不会输出。")])])}),[],!1,null,null,null);t.default=e.exports}}]);